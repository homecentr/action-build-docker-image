name: 'Build and release Docker image'
description: 'Standardized Homecentr Docker image build and release'
inputs:
  imageName:
    required: true
    description: "Name of the docker image in homecentr/some-image format."
  runTests:
    required: false
    description: "Sets whether the repo has tests"
    default: "true"
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@master

    - name: "Determine release version"
      uses: docker://ghcr.io/codfish/semantic-release-action:v1.9.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify Dockerfile with Hadolint
      uses: brpaz/hadolint-action@master

    - name: "Build Docker image"
      shell: bash
      run: |
        docker build . \
            --tag "${{ inputs.imageName }}:ci" \
            --label "org.label-schema.schema-version=1.0" \
            --label "org.label-schema.vcs-ref=${GITHUB_SHA}" \
            --label "org.label-schema.vcs-url=https://github.com/${GITHUB_REPOSITORY}" \
            --label "org.label-schema.url=https://github.com/${GITHUB_REPOSITORY}" \
            --label "org.label-schema.vendor=Homecentr" \
            --label "version=$RELEASE_VERSION" \
            --label "org.label-schema.build-date=$(date '+%F %T')"

    - name: Run tests
      if: ${{ inputs.runTests }}
      shell: bash
      run: |
        yarn
        yarn test
      
    - name: "Push to GitHub Packages"
      if: env.RELEASE_VERSION != ''
      shell: bash
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker tag ${{ inputs.imageName }}:ci ghcr.io/${{ inputs.imageName }}:$RELEASE_VERSION
        docker tag ${{ inputs.imageName }}:ci ghcr.io/${{ inputs.imageName }}:latest
        docker push ghcr.io/${{ inputs.imageName }}:$RELEASE_VERSION
        docker push ghcr.io/${{ inputs.imageName }}:latest

    - name: "Publish to Docker Hub"
      if: env.RELEASE_VERSION != ''
      shell: bash
      run: |
        echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        docker tag ${{ inputs.imageName }}:ci ${{ inputs.imageName }}:$RELEASE_VERSION
        docker tag ${{ inputs.imageName }}:ci ${{ inputs.imageName }}:latest
        docker push ${{ inputs.imageName }}:$RELEASE_VERSION
        docker push ${{ inputs.imageName }}:latest

    - name: "Update Docker Hub description"
      if: env.RELEASE_VERSION != ''
      uses: peter-evans/dockerhub-description@v2.4.3
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        DOCKERHUB_REPOSITORY: ${{ inputs.imageName }}